# CONFIG FILE PATH IS SET BY $RADICALE_CONFIG
# IF NOT WORK, SYMLINK FROM ~/.config/radicale/config
# SOURCE: https://radicale.org/v3.html#configuration

[server]
# The configuration options in this category are only relevant in standalone mode. All options are ignored, when Radicale runs via WSGI.

hosts = 0.0.0.0:5232, [::]:5232
# A comma separated list of addresses that the server will bind to.
# Bind all addresses
max_connections = 8
# The maximum number of parallel connections. Set to 0 to disable the limit.
max_content_length = 100000000
# The maximum size of the request body. (bytes)
timeout = 30
# Socket timeout. (seconds)
ssl = false
# Enable transport layer encryption, NEED THIS FOR HTTPS SO MOBILE CAN HAVE ACCESS
certificate = /etc/ssl/radicale.cert.pem
# Path of the SSL certifcate.
key = /etc/ssl/radicale.key.pem
# Path to the private key for SSL. Only effective if ssl is enabled.

[auth]

type = htpasswd
# The method to verify usernames and passwords.
htpasswd_filename = ~/radicale/users
# Path to the htpasswd file.
htpasswd_encryption = autodetect
# The encryption method that is used in the htpasswd file. Use the htpasswd or similar to generate this files.
cache_logins = false
# Cache successful/failed logins until expiration time. Enable this to avoid overload of authentication backends.

[storage]
filesystem_folder = ~/radicale
# filesystem_folder = /var/lib/radicale
# MOVED TO /var BECAUSE OF SYSTEM PERMISSION ISSUES, [SOLVED]

[rights]
# type, file, permit_delete_collection

[logging]
# level = info
# Set the logging level.
# Available levels: debug, info, warning, error, critical

[hook]

# type = none
# Hook binding for event changes and deletion notifications.

# Available types:
# none : Disabled. Nothing will be notified.
# rabbitmq (>= 3.2.0) : Push the message to the rabbitmq server.

# rabbitmq_endpoint = amqp://user:password@localhost:5672/
# End-point address for rabbitmq server. Ex: amqp://user:password@localhost:5672/

# rabbitmq_topic
# RabbitMQ topic to publish message.

# rabbitmq_queue_type = classic
# RabbitMQ queue type for the topic.
