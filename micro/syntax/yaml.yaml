filetype: yaml

detect:
    filename: "\\.ya?ml$"
    header: "%YAML"

rules:
    - type: "(^| )!!(binary|bool|float|int|map|null|omap|seq|set|str) "
    # - type: "[-.\\w]+(?=:)"  # Lookahead to exclude the colon
    - constant.number: "\\b[-+]?([1-9][0-9]*|0[0-7]*|0x[0-9a-fA-F]+)([uU][lL]?|[lL][uU]?)?\\b" # from json.yaml
    - constant.number: "\\b[-+]?([0-9]+\\.[0-9]*|[0-9]*\\.[0-9]+)([EePp][+-]?[0-9]+)?[fFlL]?" # from json.yaml
    - constant.number: "\\b[-+]?([0-9]+[EePp][+-]?[0-9]+)[fFlL]?" # from json.yaml
    - constant.bool.true: "\\b(true)\\b"
    - constant.bool.false: "\\b(false)\\b"
    - constant:  "\\b(YES|yes|ON|on|NO|no|OFF|off)\\b"

    - statement: "(:[[:space:]]|\\[|\\]|:[[:space:]]+[|>]|^[[:space:]]*- )"
    - identifier: "[[:space:]][\\*&][A-Za-z0-9]+"
    - type: "[-.\\w]+:"
    - statement: ":"
    - special:  "(^---|^\\.\\.\\.|^%YAML|^%TAG)"

    - constant.string:
        start: "(^| )\""
        end: "\""
        skip: "\\\\."
        rules:
            - constant.specialChar: "\\\\."

    - constant.string:
        start: "(^| )'"
        end: "'"
        skip: "(\\\\.)|('')"
        rules:
            - constant.specialChar: "\\\\."

    - comment:
        start: "#"
        skip: "\\\\."
        end: "$"
        rules:
            - todo: "(TODO|XXX|FIXME):?"

