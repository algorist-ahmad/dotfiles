# geany used to be my favorite colorscheme until I discovered that it created issues with syntax highlighting. I also discovered that colorscheme 'simple' does not cause issues while still preserving transparency.

# Here is a list of the colorscheme groups that you can use:
# 
#     default (color of the background and foreground for unhighlighted text)
#     comment
#     identifier
#     constant
#     statement
#     symbol
#     preproc
#     type
#     special
#     underlined
#     error
#     todo
#     selection (Color of the text selection)
#     statusline (Color of the statusline)
#     statusline.inactive (Color of the statusline of inactive split panes)
#     statusline.suggestions (Color of the autocomplete suggestions menu)
#     tabbar (Color of the tabbar that lists open files)
#     tabbar.active (Color of the active tab in the tabbar)
#     indent-char (Color of the character which indicates tabs if the option is enabled)
#     line-number
#     gutter-info
#     gutter-error
#     gutter-warning
#     diff-added
#     diff-modified
#     diff-deleted
#     cursor-line
#     current-line-number
#     color-column
#     ignore
#     scrollbar
#     divider (Color of the divider between vertical splits)
#     message (Color of messages in the bottom line of the screen)
#     error-message (Color of error messages in the bottom line of the screen)
#     match-brace (Color of matching brackets when matchbracestyle is set to highlight)
#     hlsearch (Color of highlighted search results when hlsearch is enabled)
#     tab-error (Color of tab vs space errors when hltaberrors is enabled)
#     trailingws (Color of trailing whitespaces when hltrailingws is enabled)
# 
# Colorschemes must be placed in the ~/.config/micro/colorschemes directory to be used.
# 
# In addition to the main colorscheme groups, there are subgroups that you can specify by adding .subgroup to the group. If you're creating your own custom syntax files, you can make use of your own subgroups.
# 
# If micro can't match the subgroup, it'll default to the root group, so it's safe and recommended to use subgroups in your custom syntax files.
# 
# For example if constant.string is found in your colorscheme, micro will us that for highlighting strings. If it's not found, it will use constant instead. Micro tries to match the largest set of groups it can find in the colorscheme definitions, so if, for example constant.bool.true is found then micro will use that. If constant.bool.true is not found but constant.bool is found micro will use constant.bool. If not, it uses constant.
# 
# Here's a list of subgroups used in micro's built-in syntax files.
# 
#     comment.bright (Some filetypes have distinctions between types of comments)
#     constant.bool
#     constant.bool.true
#     constant.bool.false
#     constant.number
#     constant.specialChar
#     constant.string
#     constant.string.url
#     identifier.class (Also used for functions)
#     identifier.macro
#     identifier.var
#     preproc.shebang (The #! at the beginning of a file that tells the os what script interpreter to use)
#     symbol.brackets ({}()[] and sometimes <>)
#     symbol.operator (Color operator symbols differently)
#     symbol.tag (For html tags, among other things)
#     type.keyword (If you want a special highlight for keywords like private)

# IMPORTANT: IN ORDER FOR SUBGROUPS TO WORK, MUST BE DEFINED IN YAML SYNTAX FILE

color-link comment "blue"
color-link todo    "red,brightyellow"
color-link preproc "magenta"
color-link preproc.shebang "comment"

color-link constant             "red"
color-link constant.bool.true   "green"
color-link constant.bool.false  "red"
color-link constant.number      "magenta"
color-link constant.string      "bold yellow"
color-link constant.string.url  "blue"
color-link constant.specialChar "orange"

color-link symbol          "yellow"
color-link symbol.brackets "default"
color-link symbol.operator "default"

color-link identifier "cyan"
# my own creation, confirmed to work
color-link identifier.shit "green"

color-link statement "white"

color-link type "magenta"
color-link type.extended "default"

color-link special "magenta"
color-link ignore "default"
color-link error ",brightred"
color-link hlsearch "black,yellow"
color-link statusline "black,white"
color-link indent-char "black"

color-link line-number "#808080"
color-link current-line-number "red"

color-link diff-added "green"
color-link diff-modified "yellow"
color-link diff-deleted "red"
color-link gutter-error ",red"
color-link gutter-warning "red"
#Cursor line causes readability issues. Disabled for now.
#color-link cursor-line "white,black"
color-link color-column "#808080"

#Color shebangs the comment color
color-link match-brace ",magenta"
color-link tab-error "brightred"
color-link trailingws "brightred"

